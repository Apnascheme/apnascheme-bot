import express from 'express';
import dotenv from 'dotenv';
import axios from 'axios';

dotenv.config();
const app = express();
app.use(express.json());

const PORT = process.env.PORT || 3000;
const BASE_URL = 'https://api.gupshup.io/sm/api/v1/msg';
const GUPSHUP_APP_TOKEN = process.env.GUPSHUP_APP_TOKEN;
const GUPSHUP_PHONE_NUMBER = process.env.GUPSHUP_PHONE_NUMBER;

const userContext = {}; // Temporary in-memory store

const QUESTIONS = {
  1: [
    "рдЖрдкрдХрд╛ рд▓рд┐рдВрдЧ рдХреНрдпрд╛ рд╣реИ?\n1. рдкреБрд░реБрд╖\n2. рдорд╣рд┐рд▓рд╛\n3. рдЕрдиреНрдп",
    "рдЖрдкрдХреА рдЙрдореНрд░ рдХрд┐рддрдиреА рд╣реИ? (рдХреЗрд╡рд▓ рд╕рдВрдЦреНрдпрд╛ рдореЗрдВ рд▓рд┐рдЦреЗрдВ, рдЬреИрд╕реЗ: 18)",
    "рдЖрдк рдХреНрдпрд╛ рдХрд░рддреЗ рд╣реИрдВ?\n1. рдЫрд╛рддреНрд░\n2. рдмреЗрд░реЛрдЬрд╝рдЧрд╛рд░\n3. рдиреМрдХрд░реАрдкреЗрд╢рд╛\n4. рдЕрдиреНрдп",
    "рдЖрдкрдХреЗ рдорд╛рддрд╛-рдкрд┐рддрд╛ рдХреА рд╕рд╛рд▓рд╛рдирд╛ рдЖрдп рдХрд┐рддрдиреА рд╣реИ? (рдХреЗрд╡рд▓ рд╕рдВрдЦреНрдпрд╛ рдореЗрдВ рд▓рд┐рдЦреЗрдВ, рдЬреИрд╕реЗ: 120000)",
    "рдХреНрдпрд╛ рдЖрдкрдХрд╛ рдмреИрдВрдХ рдЦрд╛рддрд╛ рд╣реИ?\n1. рд╣рд╛рдБ\n2. рдирд╣реАрдВ",
    "рдХреНрдпрд╛ рдЖрдкрдХреЗ рдкрд╛рд╕ рд░рд╛рд╢рди рдХрд╛рд░реНрдб рд╣реИ?\n1. рд╣рд╛рдБ\n2. рдирд╣реАрдВ",
    "рдЖрдкрдХрд╛ рд░рд╛рдЬреНрдп рдХреМрди рд╕рд╛ рд╣реИ? (рдЙрджрд╛рд╣рд░рдг: рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░)",
    "рдХреНрдпрд╛ рдЖрдк SC/ST/OBC/EWS рд╢реНрд░реЗрдгреА рдореЗрдВ рдЖрддреЗ рд╣реИрдВ?\n1. рд╣рд╛рдБ\n2. рдирд╣реАрдВ"
  ],
  2: [
    "What is your gender?\n1. Male\n2. Female\n3. Other",
    "What is your age? (Enter number eg. 18)",
    "What do you do?\n1. Student\n2. Unemployed\n3. Employed\n4. Other",
    "What is your Parent's yearly income? (eg. 120000)",
    "Do you have a bank account?\n1. Yes\n2. No",
    "Do you have a ration card?\n1. Yes\n2. No",
    "Which state do you live in? (eg. Maharashtra)",
    "Do you belong to SC/ST/OBC/EWS category?\n1. Yes\n2. No"
  ],
  3: [
    "рддреБрдордЪрдВ рд▓рд┐рдВрдЧ рдХрд╛рдп рдЖрд╣реЗ?\n1. Male\n2. Female\n3. Other",
    "рддреБрдордЪрдВ рд╡рдп рдХрд┐рддреА рдЖрд╣реЗ? (рдЙрджрд╛рд╣рд░рдг: 18)",
    "рддреБрдореНрд╣реА рдХрд╛рдп рдХрд░рддрд╛?\n1. рд╡рд┐рджреНрдпрд╛рд░реНрдереА\n2. рдмреЗрд░реЛрдЬрдЧрд╛рд░\n3. рдиреЛрдХрд░реА рдХрд░рддрд╛\n4. рдЗрддрд░",
    "рдкрд╛рд▓рдХрд╛рдВрдЪреЗ рд╡рд╛рд░реНрд╖рд┐рдХ рдЙрддреНрдкрдиреНрди рдХрд┐рддреА рдЖрд╣реЗ? (рдЙрджрд╛: 120000)",
    "рддреБрдордЪрдВ рдмрдБрдХ рдЦрд╛рддреЗ рдЖрд╣реЗ рдХрд╛?\n1. рд╣реЛрдп\n2. рдирд╛рд╣реА",
    "рддреБрдордЪреНрдпрд╛рдХрдбреЗ рд░реЗрд╢рди рдХрд╛рд░реНрдб рдЖрд╣реЗ рдХрд╛?\n1. рд╣реЛрдп\n2. рдирд╛рд╣реА",
    "рддреБрдордЪрдВ рд░рд╛рдЬреНрдп рдХреЛрдгрддрдВ? (рдЙрджрд╛: рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░)",
    "рддреБрдореНрд╣реА SC/ST/OBC/EWS рдкреНрд░рд╡рд░реНрдЧрд╛рдд рдореЛрдбрддрд╛ рдХрд╛?\n1. рд╣реЛрдп\n2. рдирд╛рд╣реА"
  ]
};

const OPTION_MAPPINGS = {
  1: {
    0: { '1': 'рдкреБрд░реБрд╖', '2': 'рдорд╣рд┐рд▓рд╛', '3': 'рдЕрдиреНрдп' },
    2: { '1': 'рдЫрд╛рддреНрд░', '2': 'рдмреЗрд░реЛрдЬрд╝рдЧрд╛рд░', '3': 'рдиреМрдХрд░реАрдкреЗрд╢рд╛', '4': 'рдЕрдиреНрдп' },
    4: { '1': 'рд╣рд╛рдБ', '2': 'рдирд╣реАрдВ' },
    5: { '1': 'рд╣рд╛рдБ', '2': 'рдирд╣реАрдВ' },
    7: { '1': 'рд╣рд╛рдБ', '2': 'рдирд╣реАрдВ' }
  },
  2: {
    0: { '1': 'Male', '2': 'Female', '3': 'Other' },
    2: { '1': 'Student', '2': 'Unemployed', '3': 'Employed', '4': 'Other' },
    4: { '1': 'Yes', '2': 'No' },
    5: { '1': 'Yes', '2': 'No' },
    7: { '1': 'Yes', '2': 'No' }
  },
  3: {
    0: { '1': 'Male', '2': 'Female', '3': 'Other' },
    2: { '1': 'рд╡рд┐рджреНрдпрд╛рд░реНрдереА', '2': 'рдмреЗрд░реЛрдЬрдЧрд╛рд░', '3': 'рдиреЛрдХрд░реА рдХрд░рддрд╛', '4': 'рдЗрддрд░' },
    4: { '1': 'рд╣реЛрдп', '2': 'рдирд╛рд╣реА' },
    5: { '1': 'рд╣реЛрдп', '2': 'рдирд╛рд╣реА' },
    7: { '1': 'рд╣реЛрдп', '2': 'рдирд╛рд╣реА' }
  }
};

const mapAnswer = (lang, qIndex, rawInput) => {
  const mapping = OPTION_MAPPINGS[lang]?.[qIndex];
  return mapping?.[rawInput] || rawInput; // If not mapped, return as-is
};

const sendMessage = async (phone, msg) => {
  await axios.post(BASE_URL, null, {
    params: {
      channel: 'whatsapp',
      source: GUPSHUP_PHONE_NUMBER,
      destination: phone,
      message: msg,
      'src.name': 'ApnaSchemeTechnologies'
    },
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded',
      apikey: GUPSHUP_APP_TOKEN
    }
  });
};

const getNextQuestion = (user) => {
  const lang = user.language;
  const q = QUESTIONS[lang];
  const res = user.responses;

 if (res.length === 0) return q[0];
if (res.length === 1) return q[1];
if (res.length === 2) return q[2];

let occupation = res[2]?.toLowerCase();

// Convert numeric input to occupation string (Hindi/Marathi safe)
if (occupation === '1') occupation = 'student';
else if (occupation === '2') occupation = 'unemployed';
else if (occupation === '3') occupation = 'employed';
else if (occupation === '4') occupation = 'other';

if (
  (occupation === 'student' || occupation === 'unemployed' || occupation === 'рд╡рд┐рджреНрдпрд╛рд░реНрдереА' || occupation === 'рдмреЗрд░реЛрдЬрд╝рдЧрд╛рд░') &&
  res.length === 3
) {
  return q[3]; // Ask: Do you have a bank account?
}

if (res.length === 3 && (occupation === 'employed' || occupation === 'рдиреМрдХрд░реАрдкреЗрд╢рд╛')) {
  return q[4]; // Ask: Income
}

if (
  res.length === 4 &&
  (occupation === 'student' || occupation === 'unemployed' || occupation === 'рд╡рд┐рджреНрдпрд╛рд░реНрдереА' || occupation === 'рдмреЗрд░реЛрдЬрд╝рдЧрд╛рд░')
) {
  return q[4]; // Now ask income
}

if (res.length === 5) return q[5];
if (res.length === 6) return q[6];
if (res.length === 7) return q[7];

return null;
};

app.post('/gupshup', async (req, res) => {
  const data = req.body?.payload;
  const phone = data?.sender?.phone;
  const msg = data?.payload?.text?.toLowerCase().trim();

  if (!userContext[phone]) {
    if (msg.includes('1')) userContext[phone] = { language: '1', responses: [] };
    else if (msg.includes('2')) userContext[phone] = { language: '2', responses: [] };
    else if (msg.includes('3')) userContext[phone] = { language: '3', responses: [] };
    else {
      await sendMessage(phone, "Namaste! Main hoon ApnaScheme тАУ aapka digital dost ЁЯЗоЁЯЗ│\nMain aapko batata hoon kaunsi Sarkari Yojana aapke liye hai тАУ bina agent, bina form, bina confusion.\n\nЁЯЧгя╕П Apni bhaasha chunein (1, 2, 3):\n1. рд╣рд┐рдВрджреА\n2. English\n3. рдорд░рд╛рдареА");
      return res.sendStatus(200);
    }

    const firstQuestion = getNextQuestion(userContext[phone]);
    await sendMessage(phone, firstQuestion);
    return res.sendStatus(200);
  }

  const user = userContext[phone];
  const qIndex = user.responses.length;
  const mapped = mapAnswer(parseInt(user.language), qIndex, msg);
  user.responses.push(mapped);

  const next = getNextQuestion(user);
  if (next) {
    await sendMessage(phone, next);
  } else {
    let closingMessage = "";

    if (user.language === '1') {
      closingMessage = 'рдзрдиреНрдпрд╡рд╛рдж!\n\nрдЖрдк рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛ рдХреЗ рд▓рд┐рдП рдкрд╛рддреНрд░ рд╣реИрдВ!\n\nрдпреЛрдЬрдирд╛рдУрдВ рдХреЗ рдирд╛рдо, рдЕрдкреНрд▓рд╛рдИ рдХрд░рдиреЗ рдХрд╛ рд▓рд┐рдВрдХ рдФрд░ рдкреВрд░реА рдЬрд╛рдирдХрд╛рд░реА рдЪрд╛рд╣рд┐рдП?\nрдпрд╣ рдкреВрд░реА рдорджрдж рд╕рд┐рд░реНрдл тВ╣49 рдореЗрдВ рдорд┐рд▓реЗрдЧреАред\n\nPay karo yahaan: https://rzp.io/rzp/razorpay49\n\nрдЖрдкрдХрд╛ рднреБрдЧрддрд╛рди рд╕реБрд░рдХреНрд╖рд┐рдд рд╣реИред\nрдкреВрд░рд╛ scheme list рддреБрд░рдВрдд WhatsApp рдкрд░ рднреЗрдЬрд╛ рдЬрд╛рдПрдЧрд╛ред';
    } else if (user.language === '2') {
      closingMessage = `Thank you!\n\nYou are eligible for government schemes!\n\nWant full details? (Scheme names, application link)\nYouтАЩll get everything for just тВ╣49.\n\nMake Payment here: https://rzp.io/rzp/razorpay49\n\nSecure payment.\nFull scheme list will be sent instantly via WhatsApp.`;
    } else if (user.language === '3') {
      closingMessage = `рдЖрднрд╛рд░!\n\nрддреБрдореНрд╣реА рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛рдВрд╕рд╛рдареА рдкрд╛рддреНрд░ рдЖрд╣рд╛рдд!\n\nрд╕рдВрдкреВрд░реНрдг рдорд╛рд╣рд┐рддреА рд╣рд╡реА рдЖрд╣реЗ? (рдпреЛрдЬрдирд╛ рдирд╛рд╡реЗ, рдЕрд░реНрдЬ рд▓рд┐рдВрдХреНрд╕)\nрд╕рд░реНрд╡ рдорд╛рд╣рд┐рддреА рдлрдХреНрдд тВ╣49 рдордзреНрдпреЗ рдорд┐рд│реЗрд▓.\n\nрдкреИрд╕реЗ рднрд░рд╛ рдЗрдереЗ: https://rzp.io/rzp/razorpay49\n\nрддреБрдордЪрдВ рдкреЗрдореЗрдВрдЯ рд╕реБрд░рдХреНрд╖рд┐рдд рдЖрд╣реЗ.\nрд╕рд░реНрд╡ рдпреЛрдЬрдирд╛ WhatsApp рд╡рд░ рд▓рдЧреЗрдЪ рдкрд╛рдард╡рд▓реНрдпрд╛ рдЬрд╛рддреАрд▓.`;
    }

    await sendMessage(phone, closingMessage);
    delete userContext[phone]; // Reset after flow
  }

  res.sendStatus(200);
});

app.get('/', (req, res) => {
  res.send('тЬЕ ApnaScheme Bot is running with mapped responses and 3-language flow.');
});

app.listen(PORT, () => {
  console.log(`ЁЯЪА Server live on port ${PORT}`);
});

